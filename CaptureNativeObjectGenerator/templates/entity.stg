fieldDeclaration(attr) ::= <<
<if(!attr.inheritedField)>
private <attr.javaType> <attr.captureFieldName>; // <attr.captureType> <attr.features> <attr.constraints>
<endif>
>>

getterSetterDeclaration(attr) ::= <<

/**
 * Get the value of <attr.captureFieldName>
 * Capture description: <attr.description>
 * Capture type: <attr.captureType>
 * Capture features: <attr.features>
 * Capture constraints: <attr.constraints>
 * Unless the returned value is a JRCaptureEntity or a JRCapturePlural, the returned value is immutable.
 */
public <attr.javaType> get<attr.javaAccessorName>() {
    return <attr.captureFieldName>;
}
<if(!attr.readOnly)>

/**
 * Set the value of <attr.captureFieldName>
 * Capture description: <attr.description>
 * Capture type: <attr.captureType>
 * Capture features: <attr.features>
 * Capture constraints: <attr.constraints>
 */
public void set<attr.javaAccessorName>(<attr.javaType> value) {
    this.<attr.captureFieldName> = value;
}

<endif>
>>

entity(package, className, attrs) ::= <<
/**
 * WARNING this code is automatically generated. Any changes made here will be overwritten.
 */
package <package>;

import com.janrain.capture.*;

public class <className> extends JRCaptureEntity {
    <attrs:fieldDeclaration()>
    <attrs:getterSetterDeclaration()>
}

>>